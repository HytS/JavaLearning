# javaAdvanced
## 类变量和类方法
### 类变量
* 最大的特点就是会被Child类的所有对象实例共享
#### 类变量内存布局
* 类加载时，类方法会放在方法区中
* 静态变量被同一个列的所有对象共享；static类变量在类加载的时候就生成了
* jdk8以前放在方法区中，以后的版本放在堆中类对应的class对象中，通过反射机制加载一个class对象（类加载的时候会生成一个class对象）

#### 细节
* 静态变量的访问修饰符的访问权限范围和普通属性一样
* 类名.静态变量
* 什么时候需要用类变量
* 当我们需要让某个类的所有对象都共享一个变量
* 类变量时该类的所有对象共享的，而实例变量（属性）是每个对象共享的
* 加上static称为类变量或者静态变量
* 实例变量不能通过类名.类变量名访问
* 类变量是在类加载时就初始化了，即使你没有创建对象，只要类加载了，就可以使用类变量了
* 类变量的生命周期随类的加载开始，随着类消亡而销毁

### 类方法
* 访问修饰符 static 数据返回类型 方法名(){}
* 开发自己的工具类时，可以将方法做成静态的，方便调用

#### 注意事项
* 类方法和普通方法都是随着类的加载而加载，将结构信息储存在方法区
* 类方法中无this的参数、普通方法中隐含着this的参数
* 类方法可以通过类名调用，也可以通过对象名调用
* 普通方法和对象有关，需要通过对象名调用，不能通过类名调用
* 类方法中不允许使用和对象有关的关键字，比如this和super，普通方法则可以
* 类方法中只能访问静态变量或静态方法
* 普通成员方法，既可以访问普通变量/方法，也可以访问静态变量/方法
* 静态方法，只能访问静态成员；非静态方法，可以访问静态成员和非静态成员（必须遵守访问权限）
